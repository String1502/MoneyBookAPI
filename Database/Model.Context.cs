//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MoneyBookAPI.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MoneyBookApiEntities : DbContext
    {
        public MoneyBookApiEntities()
            : base("name=MoneyBookApiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Accounts { get; set; }
        public virtual DbSet<Acquaintance_Transaction> Acquaintance_Transaction { get; set; }
        public virtual DbSet<Acquaintance> Acquaintances { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Icon> Icons { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<Wallet> Wallets { get; set; }
        public virtual DbSet<Event> Events { get; set; }
    
        public virtual int PROC_CreateAccount(string username, string password, string name, string phone, string email, Nullable<System.DateTime> birth)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var birthParameter = birth.HasValue ?
                new ObjectParameter("birth", birth) :
                new ObjectParameter("birth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateAccount", usernameParameter, passwordParameter, nameParameter, phoneParameter, emailParameter, birthParameter);
        }
    
        public virtual int PROC_CreateAcquaintance(Nullable<int> accountId, string name)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateAcquaintance", accountIdParameter, nameParameter);
        }
    
        public virtual int PROC_CreateAcquaintance_Transaction(Nullable<int> acquaintanceId, Nullable<int> transactionId)
        {
            var acquaintanceIdParameter = acquaintanceId.HasValue ?
                new ObjectParameter("acquaintanceId", acquaintanceId) :
                new ObjectParameter("acquaintanceId", typeof(int));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateAcquaintance_Transaction", acquaintanceIdParameter, transactionIdParameter);
        }
    
        public virtual int PROC_CreateCurrency(string name, string code)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateCurrency", nameParameter, codeParameter);
        }
    
        public virtual int PROC_CreateEvent(Nullable<int> accountId, Nullable<int> iconId, string name, Nullable<System.DateTime> expiredDate)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("expiredDate", expiredDate) :
                new ObjectParameter("expiredDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateEvent", accountIdParameter, iconIdParameter, nameParameter, expiredDateParameter);
        }
    
        public virtual int PROC_CreateIcon(string name, string code, string imageUrl)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateIcon", nameParameter, codeParameter, imageUrlParameter);
        }
    
        public virtual int PROC_CreateTransaction(Nullable<int> walletId, Nullable<int> typeId, Nullable<int> eventId, Nullable<int> amount, string note, Nullable<System.DateTime> date)
        {
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateTransaction", walletIdParameter, typeIdParameter, eventIdParameter, amountParameter, noteParameter, dateParameter);
        }
    
        public virtual int PROC_CreateTransactionType(Nullable<int> accountId, Nullable<int> iconId, string name, Nullable<int> isExpense, Nullable<int> isDefault, string tag)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isExpenseParameter = isExpense.HasValue ?
                new ObjectParameter("isExpense", isExpense) :
                new ObjectParameter("isExpense", typeof(int));
    
            var isDefaultParameter = isDefault.HasValue ?
                new ObjectParameter("isDefault", isDefault) :
                new ObjectParameter("isDefault", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateTransactionType", accountIdParameter, iconIdParameter, nameParameter, isExpenseParameter, isDefaultParameter, tagParameter);
        }
    
        public virtual int PROC_CreateWallet(Nullable<int> currencyId, Nullable<int> accountId, Nullable<int> iconId, string name, Nullable<int> balance)
        {
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_CreateWallet", currencyIdParameter, accountIdParameter, iconIdParameter, nameParameter, balanceParameter);
        }
    
        public virtual int PROC_DeleteAccount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteAccount", idParameter);
        }
    
        public virtual int PROC_DeleteAcquaintance(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteAcquaintance", idParameter);
        }
    
        public virtual int PROC_DeleteAcquaintance_Transaction(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteAcquaintance_Transaction", idParameter);
        }
    
        public virtual int PROC_DeleteAcquaintance_Transaction_All(Nullable<int> transactionId)
        {
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteAcquaintance_Transaction_All", transactionIdParameter);
        }
    
        public virtual int PROC_DeleteCurrency(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteCurrency", idParameter);
        }
    
        public virtual int PROC_DeleteEvent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteEvent", idParameter);
        }
    
        public virtual int PROC_DeleteIcon(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteIcon", idParameter);
        }
    
        public virtual int PROC_DeleteTransaction(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteTransaction", idParameter);
        }
    
        public virtual int PROC_DeleteTransactionAll(Nullable<int> walletId)
        {
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteTransactionAll", walletIdParameter);
        }
    
        public virtual int PROC_DeleteTransactionTypes(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteTransactionTypes", idParameter);
        }
    
        public virtual int PROC_DeleteWallet(Nullable<int> walletId)
        {
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_DeleteWallet", walletIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetAccountById_Result> PROC_GetAccountById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAccountById_Result>("PROC_GetAccountById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetAccountByUsername_Result> PROC_GetAccountByUsername(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAccountByUsername_Result>("PROC_GetAccountByUsername", usernameParameter);
        }
    
        public virtual ObjectResult<PROC_GetAcquaintance_TransactionById_Result> PROC_GetAcquaintance_TransactionById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAcquaintance_TransactionById_Result>("PROC_GetAcquaintance_TransactionById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetAcquaintance_TransactionByTransactionId_Result> PROC_GetAcquaintance_TransactionByTransactionId(Nullable<int> transactionId)
        {
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAcquaintance_TransactionByTransactionId_Result>("PROC_GetAcquaintance_TransactionByTransactionId", transactionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PROC_GetAcquaintance_TransactionIdByTransactionId(Nullable<int> transactionId)
        {
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PROC_GetAcquaintance_TransactionIdByTransactionId", transactionIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetAcquaintanceById_Result> PROC_GetAcquaintanceById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAcquaintanceById_Result>("PROC_GetAcquaintanceById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetAcquaintancesByAccount_Result> PROC_GetAcquaintancesByAccount(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAcquaintancesByAccount_Result>("PROC_GetAcquaintancesByAccount", accountIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetAllAccounts_Result> PROC_GetAllAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllAccounts_Result>("PROC_GetAllAccounts");
        }
    
        public virtual ObjectResult<PROC_GetAllAcquaintance_Transaction_Result> PROC_GetAllAcquaintance_Transaction()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllAcquaintance_Transaction_Result>("PROC_GetAllAcquaintance_Transaction");
        }
    
        public virtual ObjectResult<Nullable<int>> PROC_GetAllAcquaintance_TransactionId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PROC_GetAllAcquaintance_TransactionId");
        }
    
        public virtual ObjectResult<PROC_GetAllAcquaintances_Result> PROC_GetAllAcquaintances()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllAcquaintances_Result>("PROC_GetAllAcquaintances");
        }
    
        public virtual ObjectResult<PROC_GetAllCurrencies_Result> PROC_GetAllCurrencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllCurrencies_Result>("PROC_GetAllCurrencies");
        }
    
        public virtual ObjectResult<PROC_GetAllIcons_Result> PROC_GetAllIcons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllIcons_Result>("PROC_GetAllIcons");
        }
    
        public virtual ObjectResult<PROC_GetAllTransactions_Result> PROC_GetAllTransactions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllTransactions_Result>("PROC_GetAllTransactions");
        }
    
        public virtual ObjectResult<Nullable<int>> PROC_GetAllTransactionsId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PROC_GetAllTransactionsId");
        }
    
        public virtual ObjectResult<PROC_GetAllTransactionTypes_Result> PROC_GetAllTransactionTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllTransactionTypes_Result>("PROC_GetAllTransactionTypes");
        }
    
        public virtual ObjectResult<PROC_GetAllWallets_Result> PROC_GetAllWallets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllWallets_Result>("PROC_GetAllWallets");
        }
    
        public virtual ObjectResult<PROC_GetCurrencyByCode_Result> PROC_GetCurrencyByCode(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetCurrencyByCode_Result>("PROC_GetCurrencyByCode", codeParameter);
        }
    
        public virtual ObjectResult<PROC_GetCurrencyById_Result> PROC_GetCurrencyById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetCurrencyById_Result>("PROC_GetCurrencyById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetDefaultTransactionTypes_Result> PROC_GetDefaultTransactionTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetDefaultTransactionTypes_Result>("PROC_GetDefaultTransactionTypes");
        }
    
        public virtual ObjectResult<PROC_GetEventById_Result> PROC_GetEventById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetEventById_Result>("PROC_GetEventById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetEventsByAccount_Result> PROC_GetEventsByAccount(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetEventsByAccount_Result>("PROC_GetEventsByAccount", accountIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetIconByCode_Result> PROC_GetIconByCode(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetIconByCode_Result>("PROC_GetIconByCode", codeParameter);
        }
    
        public virtual ObjectResult<PROC_GetIconById_Result> PROC_GetIconById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetIconById_Result>("PROC_GetIconById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetPersonalTransactionTypesByAccount_Result> PROC_GetPersonalTransactionTypesByAccount(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetPersonalTransactionTypesByAccount_Result>("PROC_GetPersonalTransactionTypesByAccount", accountIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetTransactionById_Result> PROC_GetTransactionById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetTransactionById_Result>("PROC_GetTransactionById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetTransactionsByWallet_Result> PROC_GetTransactionsByWallet(Nullable<int> walletId)
        {
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetTransactionsByWallet_Result>("PROC_GetTransactionsByWallet", walletIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PROC_GetTransactionsIdByWallet(Nullable<int> walletId)
        {
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PROC_GetTransactionsIdByWallet", walletIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetTransactionTypeById_Result> PROC_GetTransactionTypeById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetTransactionTypeById_Result>("PROC_GetTransactionTypeById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetTransactionTypesByAccount_Result> PROC_GetTransactionTypesByAccount(Nullable<int> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetTransactionTypesByAccount_Result>("PROC_GetTransactionTypesByAccount", accountIdParameter);
        }
    
        public virtual ObjectResult<PROC_GetWalletById_Result> PROC_GetWalletById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetWalletById_Result>("PROC_GetWalletById", idParameter);
        }
    
        public virtual ObjectResult<PROC_GetWalletsByAccount_Result> PROC_GetWalletsByAccount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetWalletsByAccount_Result>("PROC_GetWalletsByAccount", idParameter);
        }
    
        public virtual ObjectResult<PROC_LoginAccountIn_Result> PROC_LoginAccountIn(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_LoginAccountIn_Result>("PROC_LoginAccountIn", usernameParameter, passwordParameter);
        }
    
        public virtual int PROC_UpdateAccount(Nullable<int> id, string password, string name, string phone, string email, Nullable<System.DateTime> birth)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var birthParameter = birth.HasValue ?
                new ObjectParameter("birth", birth) :
                new ObjectParameter("birth", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateAccount", idParameter, passwordParameter, nameParameter, phoneParameter, emailParameter, birthParameter);
        }
    
        public virtual int PROC_UpdateAcquaintance(Nullable<int> id, Nullable<int> accountId, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateAcquaintance", idParameter, accountIdParameter, nameParameter);
        }
    
        public virtual int PROC_UpdateAcquaintance_Transaction(Nullable<int> id, Nullable<int> acquaintanceId, Nullable<int> transactionId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var acquaintanceIdParameter = acquaintanceId.HasValue ?
                new ObjectParameter("acquaintanceId", acquaintanceId) :
                new ObjectParameter("acquaintanceId", typeof(int));
    
            var transactionIdParameter = transactionId.HasValue ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateAcquaintance_Transaction", idParameter, acquaintanceIdParameter, transactionIdParameter);
        }
    
        public virtual int PROC_UpdateCurrency(Nullable<int> id, string name, string code)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateCurrency", idParameter, nameParameter, codeParameter);
        }
    
        public virtual int PROC_UpdateEvent(Nullable<int> id, Nullable<int> accountId, Nullable<int> iconId, string name, Nullable<System.DateTime> expiredDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("expiredDate", expiredDate) :
                new ObjectParameter("expiredDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateEvent", idParameter, accountIdParameter, iconIdParameter, nameParameter, expiredDateParameter);
        }
    
        public virtual int PROC_UpdateIcon(Nullable<int> id, string name, string code, string imageUrl)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("imageUrl", imageUrl) :
                new ObjectParameter("imageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateIcon", idParameter, nameParameter, codeParameter, imageUrlParameter);
        }
    
        public virtual int PROC_UpdateTransaction(Nullable<int> id, Nullable<int> walletId, Nullable<int> typeId, Nullable<int> eventId, Nullable<int> amount, string note, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var walletIdParameter = walletId.HasValue ?
                new ObjectParameter("walletId", walletId) :
                new ObjectParameter("walletId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateTransaction", idParameter, walletIdParameter, typeIdParameter, eventIdParameter, amountParameter, noteParameter, dateParameter);
        }
    
        public virtual int PROC_UpdateTransactionType(Nullable<int> id, Nullable<int> iconId, string name, Nullable<int> isExpense)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var isExpenseParameter = isExpense.HasValue ?
                new ObjectParameter("isExpense", isExpense) :
                new ObjectParameter("isExpense", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateTransactionType", idParameter, iconIdParameter, nameParameter, isExpenseParameter);
        }
    
        public virtual int PROC_UpdateWallet(Nullable<int> id, Nullable<int> currencyId, Nullable<int> accountId, Nullable<int> iconId, string name, Nullable<int> balance)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var currencyIdParameter = currencyId.HasValue ?
                new ObjectParameter("currencyId", currencyId) :
                new ObjectParameter("currencyId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("accountId", accountId) :
                new ObjectParameter("accountId", typeof(int));
    
            var iconIdParameter = iconId.HasValue ?
                new ObjectParameter("iconId", iconId) :
                new ObjectParameter("iconId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateWallet", idParameter, currencyIdParameter, accountIdParameter, iconIdParameter, nameParameter, balanceParameter);
        }
    
        public virtual ObjectResult<PROC_GetAllEvents_Result> PROC_GetAllEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_GetAllEvents_Result>("PROC_GetAllEvents");
        }
    
        public virtual int PROC_UpdateEventStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PROC_UpdateEventStatus");
        }
    }
}
